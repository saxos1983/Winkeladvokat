<?xml version="1.0"?>
<doc>
    <assembly>
        <name>bbv.Common.Formatters</name>
    </assembly>
    <members>
        <member name="T:bbv.Common.Formatters.FormatHelper">
            <summary>
            Provides functionality for formatting strings.
            </summary>
        </member>
        <member name="M:bbv.Common.Formatters.FormatHelper.SecureFormat(System.String,System.Object[])">
            <summary>
            Replacement for the String.Format method, that throws an exception
            when the count of arguments does not match the count of placeholders.
            <para>
            If format and/or args are null then still a string is returned.
            </para>
            </summary>
            <param name="format">The format string.</param>
            <param name="args">The arguments to the format string..</param>
            <returns>
            Returns the fully formatted string, if successful In case of
            an error, the format string and all parameters added in a list
            will be returned.
            </returns>
            <remarks>
            Tries to format with String.Format. In case of an Exception the
            original format string and all parameters added in a list will
            be returned.
            </remarks>
        </member>
        <member name="M:bbv.Common.Formatters.FormatHelper.ConvertToString(System.Collections.IEnumerable,System.String)">
            <summary>
            Converts a collection of objects to a string representation.
            </summary>
            <param name="collection">Collection of objects.</param>
            <param name="separator">Separator to separate objects.</param>
            <returns>String representation of the collection.</returns>
        </member>
        <member name="M:bbv.Common.Formatters.FormatHelper.ConvertToString(System.Collections.Generic.IDictionary{System.Object,System.Object},System.String)">
            <summary>
            Converts a dictionary of object, object to a string representation in the form of Key=Value<paramref name="separator"/>.
            </summary>
            <param name="dictionary">The dictionary.</param>
            <param name="separator">The separator to separate key value pairs.</param>
            <returns>String representation of the dictionary</returns>
        </member>
        <member name="T:bbv.Common.Formatters.StringTruncationFormatter">
            <summary>
            Allows to define the maximal length of an string. A string longer than the given value will be truncated.
            Use: Format("{0,-5:L5}", "123456")         -> "12345"
            Use: Format("{0,5:L5}", "123")             -> "  123"
            Use: Format("{0,-5:L10}", "1234567890123") -> "1234567890"
            </summary>
        </member>
        <member name="M:bbv.Common.Formatters.StringTruncationFormatter.GetFormat(System.Type)">
            <summary>
            String.Format calls this method to get an instance of an ICustomFormatter to handle the formatting.
            </summary>
            <param name="service">The requested service.</param>
            <returns>An ICustomFormatter.</returns>
        </member>
        <member name="M:bbv.Common.Formatters.StringTruncationFormatter.Format(System.String,System.Object,System.IFormatProvider)">
            <summary>
            After String.Format gets the ICustomFormatter, it calls this format method on each argument.
            </summary>
            <param name="format">The format string.</param>
            <param name="arg">The arguments for the format string.</param>
            <param name="provider">The provider.</param>
            <returns>Formatted string.</returns>
        </member>
    </members>
</doc>
